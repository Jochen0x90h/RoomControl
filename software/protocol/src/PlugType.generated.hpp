
enum class PlugType : uint16_t {
	// direction
	IN = 2 << 14,
	OUT = 1 << 14,
	DIRECTION_MASK = 3 << 14,
	
	// explicit command (set, increase, decrease)
	CMD = 1 << 13,
	
	// type
	TYPE_MASK = 0x1fff,	
	UNKNOWN = 0,
	CATEGORY = 15 << 9,
	// binary category (uint8)
	BINARY = 1 << 9,
	BINARY_IN = BINARY | IN,
	BINARY_OUT = BINARY | OUT,
	BINARY_CMD_IN = BINARY_IN | CMD,
	BINARY_CMD_OUT = BINARY_OUT | CMD,
		BINARY_CATEGORY = 255 << 5,
		// button returns to inactive state when released (0: released, 1: pressed)
		BINARY_BUTTON = BINARY | 1 << 5,
		BINARY_BUTTON_IN = BINARY_BUTTON | IN,
		BINARY_BUTTON_OUT = BINARY_BUTTON | OUT,
			BINARY_BUTTON_CATEGORY = 2047 << 2,
			// mechanical button mounted on the wall
			BINARY_BUTTON_WALL = BINARY_BUTTON | 1 << 2,
			BINARY_BUTTON_WALL_IN = BINARY_BUTTON_WALL | IN,
			BINARY_BUTTON_WALL_OUT = BINARY_BUTTON_WALL | OUT,
		// switch with two stable states (0: off, 1: on)
		BINARY_SWITCH = BINARY | 2 << 5,
		BINARY_SWITCH_IN = BINARY_SWITCH | IN,
		BINARY_SWITCH_OUT = BINARY_SWITCH | OUT,
			BINARY_SWITCH_CATEGORY = 2047 << 2,
			// mechanical switch mounted on the wall
			BINARY_SWITCH_WALL = BINARY_SWITCH | 1 << 2,
			BINARY_SWITCH_WALL_IN = BINARY_SWITCH_WALL | IN,
			BINARY_SWITCH_WALL_OUT = BINARY_SWITCH_WALL | OUT,
		// power on/off (0: off, 1: on, 2: toggle command)
		BINARY_POWER = BINARY | 3 << 5,
		BINARY_POWER_IN = BINARY_POWER | IN,
		BINARY_POWER_OUT = BINARY_POWER | OUT,
		BINARY_POWER_CMD_IN = BINARY_POWER_IN | CMD,
		BINARY_POWER_CMD_OUT = BINARY_POWER_OUT | CMD,
			BINARY_POWER_CATEGORY = 4095 << 1,
			// light
			BINARY_POWER_LIGHT = BINARY_POWER | 1 << 1,
			BINARY_POWER_LIGHT_IN = BINARY_POWER_LIGHT | IN,
			BINARY_POWER_LIGHT_OUT = BINARY_POWER_LIGHT | OUT,
			BINARY_POWER_LIGHT_CMD_IN = BINARY_POWER_LIGHT_IN | CMD,
			BINARY_POWER_LIGHT_CMD_OUT = BINARY_POWER_LIGHT_OUT | CMD,
			// freezer on
			BINARY_POWER_FREEZER = BINARY_POWER | 2 << 1,
			BINARY_POWER_FREEZER_IN = BINARY_POWER_FREEZER | IN,
			BINARY_POWER_FREEZER_OUT = BINARY_POWER_FREEZER | OUT,
			BINARY_POWER_FREEZER_CMD_IN = BINARY_POWER_FREEZER_IN | CMD,
			BINARY_POWER_FREEZER_CMD_OUT = BINARY_POWER_FREEZER_OUT | CMD,
			// fridge on
			BINARY_POWER_FRIDGE = BINARY_POWER | 3 << 1,
			BINARY_POWER_FRIDGE_IN = BINARY_POWER_FRIDGE | IN,
			BINARY_POWER_FRIDGE_OUT = BINARY_POWER_FRIDGE | OUT,
			BINARY_POWER_FRIDGE_CMD_IN = BINARY_POWER_FRIDGE_IN | CMD,
			BINARY_POWER_FRIDGE_CMD_OUT = BINARY_POWER_FRIDGE_OUT | CMD,
			// air conditioning on
			BINARY_POWER_AC = BINARY_POWER | 4 << 1,
			BINARY_POWER_AC_IN = BINARY_POWER_AC | IN,
			BINARY_POWER_AC_OUT = BINARY_POWER_AC | OUT,
			BINARY_POWER_AC_CMD_IN = BINARY_POWER_AC_IN | CMD,
			BINARY_POWER_AC_CMD_OUT = BINARY_POWER_AC_OUT | CMD,
			// oven or toaster on
			BINARY_POWER_OVEN = BINARY_POWER | 5 << 1,
			BINARY_POWER_OVEN_IN = BINARY_POWER_OVEN | IN,
			BINARY_POWER_OVEN_OUT = BINARY_POWER_OVEN | OUT,
			BINARY_POWER_OVEN_CMD_IN = BINARY_POWER_OVEN_IN | CMD,
			BINARY_POWER_OVEN_CMD_OUT = BINARY_POWER_OVEN_OUT | CMD,
			// hearth, kettle, egg cooker on
			BINARY_POWER_COOKER = BINARY_POWER | 6 << 1,
			BINARY_POWER_COOKER_IN = BINARY_POWER_COOKER | IN,
			BINARY_POWER_COOKER_OUT = BINARY_POWER_COOKER | OUT,
			BINARY_POWER_COOKER_CMD_IN = BINARY_POWER_COOKER_IN | CMD,
			BINARY_POWER_COOKER_CMD_OUT = BINARY_POWER_COOKER_OUT | CMD,
			// coffee machine on
			BINARY_POWER_COFFEE = BINARY_POWER | 7 << 1,
			BINARY_POWER_COFFEE_IN = BINARY_POWER_COFFEE | IN,
			BINARY_POWER_COFFEE_OUT = BINARY_POWER_COFFEE | OUT,
			BINARY_POWER_COFFEE_CMD_IN = BINARY_POWER_COFFEE_IN | CMD,
			BINARY_POWER_COFFEE_CMD_OUT = BINARY_POWER_COFFEE_OUT | CMD,
			// dishwasher on
			BINARY_POWER_DISHWASHER = BINARY_POWER | 8 << 1,
			BINARY_POWER_DISHWASHER_IN = BINARY_POWER_DISHWASHER | IN,
			BINARY_POWER_DISHWASHER_OUT = BINARY_POWER_DISHWASHER | OUT,
			BINARY_POWER_DISHWASHER_CMD_IN = BINARY_POWER_DISHWASHER_IN | CMD,
			BINARY_POWER_DISHWASHER_CMD_OUT = BINARY_POWER_DISHWASHER_OUT | CMD,
			// washing machine on
			BINARY_POWER_WASHING = BINARY_POWER | 9 << 1,
			BINARY_POWER_WASHING_IN = BINARY_POWER_WASHING | IN,
			BINARY_POWER_WASHING_OUT = BINARY_POWER_WASHING | OUT,
			BINARY_POWER_WASHING_CMD_IN = BINARY_POWER_WASHING_IN | CMD,
			BINARY_POWER_WASHING_CMD_OUT = BINARY_POWER_WASHING_OUT | CMD,
			// hi-fi system on
			BINARY_POWER_HIFI = BINARY_POWER | 10 << 1,
			BINARY_POWER_HIFI_IN = BINARY_POWER_HIFI | IN,
			BINARY_POWER_HIFI_OUT = BINARY_POWER_HIFI | OUT,
			BINARY_POWER_HIFI_CMD_IN = BINARY_POWER_HIFI_IN | CMD,
			BINARY_POWER_HIFI_CMD_OUT = BINARY_POWER_HIFI_OUT | CMD,
			// television on
			BINARY_POWER_TV = BINARY_POWER | 11 << 1,
			BINARY_POWER_TV_IN = BINARY_POWER_TV | IN,
			BINARY_POWER_TV_OUT = BINARY_POWER_TV | OUT,
			BINARY_POWER_TV_CMD_IN = BINARY_POWER_TV_IN | CMD,
			BINARY_POWER_TV_CMD_OUT = BINARY_POWER_TV_OUT | CMD,
		// state of opening such as gate, door, window, blind, slat or valve (0: closed, 1: open, 2: toggle command)
		BINARY_OPENING = BINARY | 4 << 5,
		BINARY_OPENING_IN = BINARY_OPENING | IN,
		BINARY_OPENING_OUT = BINARY_OPENING | OUT,
		BINARY_OPENING_CMD_IN = BINARY_OPENING_IN | CMD,
		BINARY_OPENING_CMD_OUT = BINARY_OPENING_OUT | CMD,
			BINARY_OPENING_CATEGORY = 4095 << 1,
			// gate
			BINARY_OPENING_GATE = BINARY_OPENING | 1 << 1,
			BINARY_OPENING_GATE_IN = BINARY_OPENING_GATE | IN,
			BINARY_OPENING_GATE_OUT = BINARY_OPENING_GATE | OUT,
			BINARY_OPENING_GATE_CMD_IN = BINARY_OPENING_GATE_IN | CMD,
			BINARY_OPENING_GATE_CMD_OUT = BINARY_OPENING_GATE_OUT | CMD,
			// door
			BINARY_OPENING_DOOR = BINARY_OPENING | 2 << 1,
			BINARY_OPENING_DOOR_IN = BINARY_OPENING_DOOR | IN,
			BINARY_OPENING_DOOR_OUT = BINARY_OPENING_DOOR | OUT,
			BINARY_OPENING_DOOR_CMD_IN = BINARY_OPENING_DOOR_IN | CMD,
			BINARY_OPENING_DOOR_CMD_OUT = BINARY_OPENING_DOOR_OUT | CMD,
			// window
			BINARY_OPENING_WINDOW = BINARY_OPENING | 3 << 1,
			BINARY_OPENING_WINDOW_IN = BINARY_OPENING_WINDOW | IN,
			BINARY_OPENING_WINDOW_OUT = BINARY_OPENING_WINDOW | OUT,
			BINARY_OPENING_WINDOW_CMD_IN = BINARY_OPENING_WINDOW_IN | CMD,
			BINARY_OPENING_WINDOW_CMD_OUT = BINARY_OPENING_WINDOW_OUT | CMD,
			// blind
			BINARY_OPENING_BLIND = BINARY_OPENING | 4 << 1,
			BINARY_OPENING_BLIND_IN = BINARY_OPENING_BLIND | IN,
			BINARY_OPENING_BLIND_OUT = BINARY_OPENING_BLIND | OUT,
			BINARY_OPENING_BLIND_CMD_IN = BINARY_OPENING_BLIND_IN | CMD,
			BINARY_OPENING_BLIND_CMD_OUT = BINARY_OPENING_BLIND_OUT | CMD,
			// slat
			BINARY_OPENING_SLAT = BINARY_OPENING | 5 << 1,
			BINARY_OPENING_SLAT_IN = BINARY_OPENING_SLAT | IN,
			BINARY_OPENING_SLAT_OUT = BINARY_OPENING_SLAT | OUT,
			BINARY_OPENING_SLAT_CMD_IN = BINARY_OPENING_SLAT_IN | CMD,
			BINARY_OPENING_SLAT_CMD_OUT = BINARY_OPENING_SLAT_OUT | CMD,
			// valve
			BINARY_OPENING_VALVE = BINARY_OPENING | 6 << 1,
			BINARY_OPENING_VALVE_IN = BINARY_OPENING_VALVE | IN,
			BINARY_OPENING_VALVE_OUT = BINARY_OPENING_VALVE | OUT,
			BINARY_OPENING_VALVE_CMD_IN = BINARY_OPENING_VALVE_IN | CMD,
			BINARY_OPENING_VALVE_CMD_OUT = BINARY_OPENING_VALVE_OUT | CMD,
		// state of lock of gate, door, window, (0: unlocked, 1: locked, 2: toggle command)
		BINARY_LOCK = BINARY | 5 << 5,
		BINARY_LOCK_IN = BINARY_LOCK | IN,
		BINARY_LOCK_OUT = BINARY_LOCK | OUT,
		BINARY_LOCK_CMD_IN = BINARY_LOCK_IN | CMD,
		BINARY_LOCK_CMD_OUT = BINARY_LOCK_OUT | CMD,
			BINARY_LOCK_CATEGORY = 2047 << 2,
			// gate
			BINARY_LOCK_GATE = BINARY_LOCK | 1 << 2,
			BINARY_LOCK_GATE_IN = BINARY_LOCK_GATE | IN,
			BINARY_LOCK_GATE_OUT = BINARY_LOCK_GATE | OUT,
			BINARY_LOCK_GATE_CMD_IN = BINARY_LOCK_GATE_IN | CMD,
			BINARY_LOCK_GATE_CMD_OUT = BINARY_LOCK_GATE_OUT | CMD,
			// door
			BINARY_LOCK_DOOR = BINARY_LOCK | 2 << 2,
			BINARY_LOCK_DOOR_IN = BINARY_LOCK_DOOR | IN,
			BINARY_LOCK_DOOR_OUT = BINARY_LOCK_DOOR | OUT,
			BINARY_LOCK_DOOR_CMD_IN = BINARY_LOCK_DOOR_IN | CMD,
			BINARY_LOCK_DOOR_CMD_OUT = BINARY_LOCK_DOOR_OUT | CMD,
			// window
			BINARY_LOCK_WINDOW = BINARY_LOCK | 3 << 2,
			BINARY_LOCK_WINDOW_IN = BINARY_LOCK_WINDOW | IN,
			BINARY_LOCK_WINDOW_OUT = BINARY_LOCK_WINDOW | OUT,
			BINARY_LOCK_WINDOW_CMD_IN = BINARY_LOCK_WINDOW_IN | CMD,
			BINARY_LOCK_WINDOW_CMD_OUT = BINARY_LOCK_WINDOW_OUT | CMD,
		// occupancy measured by e.g. PIR sensor (0: unoccupied, 1: occupied)
		BINARY_OCCUPANCY = BINARY | 6 << 5,
		BINARY_OCCUPANCY_IN = BINARY_OCCUPANCY | IN,
		BINARY_OCCUPANCY_OUT = BINARY_OCCUPANCY | OUT,
		// activation of alarm (0: deactivated, 1: activated)
		BINARY_ALARM = BINARY | 7 << 5,
		BINARY_ALARM_IN = BINARY_ALARM | IN,
		BINARY_ALARM_OUT = BINARY_ALARM | OUT,
		// sound (0: stop, 1: play)
		BINARY_SOUND = BINARY | 8 << 5,
		BINARY_SOUND_IN = BINARY_SOUND | IN,
		BINARY_SOUND_OUT = BINARY_SOUND | OUT,
			BINARY_SOUND_CATEGORY = 4095 << 1,
			// event sound
			BINARY_SOUND_EVENT = BINARY_SOUND | 1 << 1,
			BINARY_SOUND_EVENT_IN = BINARY_SOUND_EVENT | IN,
			BINARY_SOUND_EVENT_OUT = BINARY_SOUND_EVENT | OUT,
			BINARY_SOUND_EVENT_CMD_IN = BINARY_SOUND_EVENT_IN | CMD,
			BINARY_SOUND_EVENT_CMD_OUT = BINARY_SOUND_EVENT_OUT | CMD,
			// activation sound
			BINARY_SOUND_ACTIVATION = BINARY_SOUND | 2 << 1,
			BINARY_SOUND_ACTIVATION_IN = BINARY_SOUND_ACTIVATION | IN,
			BINARY_SOUND_ACTIVATION_OUT = BINARY_SOUND_ACTIVATION | OUT,
			BINARY_SOUND_ACTIVATION_CMD_IN = BINARY_SOUND_ACTIVATION_IN | CMD,
			BINARY_SOUND_ACTIVATION_CMD_OUT = BINARY_SOUND_ACTIVATION_OUT | CMD,
			// deactivation sound
			BINARY_SOUND_DEACTIVATION = BINARY_SOUND | 3 << 1,
			BINARY_SOUND_DEACTIVATION_IN = BINARY_SOUND_DEACTIVATION | IN,
			BINARY_SOUND_DEACTIVATION_OUT = BINARY_SOUND_DEACTIVATION | OUT,
			BINARY_SOUND_DEACTIVATION_CMD_IN = BINARY_SOUND_DEACTIVATION_IN | CMD,
			BINARY_SOUND_DEACTIVATION_CMD_OUT = BINARY_SOUND_DEACTIVATION_OUT | CMD,
			// information sound
			BINARY_SOUND_INFORMATION = BINARY_SOUND | 4 << 1,
			BINARY_SOUND_INFORMATION_IN = BINARY_SOUND_INFORMATION | IN,
			BINARY_SOUND_INFORMATION_OUT = BINARY_SOUND_INFORMATION | OUT,
			BINARY_SOUND_INFORMATION_CMD_IN = BINARY_SOUND_INFORMATION_IN | CMD,
			BINARY_SOUND_INFORMATION_CMD_OUT = BINARY_SOUND_INFORMATION_OUT | CMD,
			// warning sound
			BINARY_SOUND_WARNING = BINARY_SOUND | 5 << 1,
			BINARY_SOUND_WARNING_IN = BINARY_SOUND_WARNING | IN,
			BINARY_SOUND_WARNING_OUT = BINARY_SOUND_WARNING | OUT,
			BINARY_SOUND_WARNING_CMD_IN = BINARY_SOUND_WARNING_IN | CMD,
			BINARY_SOUND_WARNING_CMD_OUT = BINARY_SOUND_WARNING_OUT | CMD,
			// dorbell sound
			BINARY_SOUND_DOORBELL = BINARY_SOUND | 6 << 1,
			BINARY_SOUND_DOORBELL_IN = BINARY_SOUND_DOORBELL | IN,
			BINARY_SOUND_DOORBELL_OUT = BINARY_SOUND_DOORBELL | OUT,
			BINARY_SOUND_DOORBELL_CMD_IN = BINARY_SOUND_DOORBELL_IN | CMD,
			BINARY_SOUND_DOORBELL_CMD_OUT = BINARY_SOUND_DOORBELL_OUT | CMD,
			// call sound
			BINARY_SOUND_CALL = BINARY_SOUND | 7 << 1,
			BINARY_SOUND_CALL_IN = BINARY_SOUND_CALL | IN,
			BINARY_SOUND_CALL_OUT = BINARY_SOUND_CALL | OUT,
			BINARY_SOUND_CALL_CMD_IN = BINARY_SOUND_CALL_IN | CMD,
			BINARY_SOUND_CALL_CMD_OUT = BINARY_SOUND_CALL_OUT | CMD,
			// alarm sound
			BINARY_SOUND_ALARM = BINARY_SOUND | 8 << 1,
			BINARY_SOUND_ALARM_IN = BINARY_SOUND_ALARM | IN,
			BINARY_SOUND_ALARM_OUT = BINARY_SOUND_ALARM | OUT,
			BINARY_SOUND_ALARM_CMD_IN = BINARY_SOUND_ALARM_IN | CMD,
			BINARY_SOUND_ALARM_CMD_OUT = BINARY_SOUND_ALARM_OUT | CMD,
		// closing of blind/lock enabled (0: disabled, 1: enabled)
		BINARY_ENABLE_CLOSE = BINARY | 9 << 5,
		BINARY_ENABLE_CLOSE_IN = BINARY_ENABLE_CLOSE | IN,
		BINARY_ENABLE_CLOSE_OUT = BINARY_ENABLE_CLOSE | OUT,
	// ternary category (uint8)
	TERNARY = 2 << 9,
	TERNARY_IN = TERNARY | IN,
	TERNARY_OUT = TERNARY | OUT,
	TERNARY_CMD_IN = TERNARY_IN | CMD,
	TERNARY_CMD_OUT = TERNARY_OUT | CMD,
		TERNARY_CATEGORY = 255 << 5,
		// button returns to inactive state when released (0: release, 1: up, 2: down)
		TERNARY_ROCKER = TERNARY | 1 << 5,
		TERNARY_ROCKER_IN = TERNARY_ROCKER | IN,
		TERNARY_ROCKER_OUT = TERNARY_ROCKER | OUT,
			TERNARY_ROCKER_CATEGORY = 2047 << 2,
			// mechanical button mounted on the wall
			TERNARY_ROCKER_WALL = TERNARY_ROCKER | 1 << 2,
			TERNARY_ROCKER_WALL_IN = TERNARY_ROCKER_WALL | IN,
			TERNARY_ROCKER_WALL_OUT = TERNARY_ROCKER_WALL | OUT,
		// switch with three stable states (0: off, 1: on1, 2: on2)
		TERNARY_SWITCH = TERNARY | 2 << 5,
		TERNARY_SWITCH_IN = TERNARY_SWITCH | IN,
		TERNARY_SWITCH_OUT = TERNARY_SWITCH | OUT,
			TERNARY_SWITCH_CATEGORY = 2047 << 2,
			// mechanical switch mounted on the wall
			TERNARY_SWITCH_WALL = TERNARY_SWITCH | 1 << 2,
			TERNARY_SWITCH_WALL_IN = TERNARY_SWITCH_WALL | IN,
			TERNARY_SWITCH_WALL_OUT = TERNARY_SWITCH_WALL | OUT,
		// opening drive of gate, door, window, blind, slat, valve etc. (0: stopped, 1: opening, 2: closing)
		TERNARY_OPENING = TERNARY | 3 << 5,
		TERNARY_OPENING_IN = TERNARY_OPENING | IN,
		TERNARY_OPENING_OUT = TERNARY_OPENING | OUT,
			TERNARY_OPENING_CATEGORY = 4095 << 1,
			// gate drive
			TERNARY_OPENING_GATE = TERNARY_OPENING | 1 << 1,
			TERNARY_OPENING_GATE_IN = TERNARY_OPENING_GATE | IN,
			TERNARY_OPENING_GATE_OUT = TERNARY_OPENING_GATE | OUT,
			// door drive
			TERNARY_OPENING_DOOR = TERNARY_OPENING | 2 << 1,
			TERNARY_OPENING_DOOR_IN = TERNARY_OPENING_DOOR | IN,
			TERNARY_OPENING_DOOR_OUT = TERNARY_OPENING_DOOR | OUT,
			// window drive
			TERNARY_OPENING_WINDOW = TERNARY_OPENING | 3 << 1,
			TERNARY_OPENING_WINDOW_IN = TERNARY_OPENING_WINDOW | IN,
			TERNARY_OPENING_WINDOW_OUT = TERNARY_OPENING_WINDOW | OUT,
			// blind drive
			TERNARY_OPENING_BLIND = TERNARY_OPENING | 4 << 1,
			TERNARY_OPENING_BLIND_IN = TERNARY_OPENING_BLIND | IN,
			TERNARY_OPENING_BLIND_OUT = TERNARY_OPENING_BLIND | OUT,
			// slat drive
			TERNARY_OPENING_SLAT = TERNARY_OPENING | 5 << 1,
			TERNARY_OPENING_SLAT_IN = TERNARY_OPENING_SLAT | IN,
			TERNARY_OPENING_SLAT_OUT = TERNARY_OPENING_SLAT | OUT,
			// valve drive
			TERNARY_OPENING_VALVE = TERNARY_OPENING | 6 << 1,
			TERNARY_OPENING_VALVE_IN = TERNARY_OPENING_VALVE | IN,
			TERNARY_OPENING_VALVE_OUT = TERNARY_OPENING_VALVE | OUT,
		// tilt/lock state of door, window, (0: unlocked, 1: tilt, 2: locked)
		TERNARY_LOCK = TERNARY | 4 << 5,
		TERNARY_LOCK_IN = TERNARY_LOCK | IN,
		TERNARY_LOCK_OUT = TERNARY_LOCK | OUT,
			TERNARY_LOCK_CATEGORY = 2047 << 2,
			// door
			TERNARY_LOCK_DOOR = TERNARY_LOCK | 1 << 2,
			TERNARY_LOCK_DOOR_IN = TERNARY_LOCK_DOOR | IN,
			TERNARY_LOCK_DOOR_OUT = TERNARY_LOCK_DOOR | OUT,
			// window
			TERNARY_LOCK_WINDOW = TERNARY_LOCK | 2 << 2,
			TERNARY_LOCK_WINDOW_IN = TERNARY_LOCK_WINDOW | IN,
			TERNARY_LOCK_WINDOW_OUT = TERNARY_LOCK_WINDOW | OUT,
	// multi-state category (uint8)
	MULTISTATE = 3 << 9,
	MULTISTATE_IN = MULTISTATE | IN,
	MULTISTATE_OUT = MULTISTATE | OUT,
	MULTISTATE_CMD_IN = MULTISTATE_IN | CMD,
	MULTISTATE_CMD_OUT = MULTISTATE_OUT | CMD,
		MULTISTATE_CATEGORY = 255 << 5,
		// thermostat mode (0: heat, 1: cool, 2: auto)
		MULTISTATE_THERMOSTAT_MODE = MULTISTATE | 1 << 5,
		MULTISTATE_THERMOSTAT_MODE_IN = MULTISTATE_THERMOSTAT_MODE | IN,
		MULTISTATE_THERMOSTAT_MODE_OUT = MULTISTATE_THERMOSTAT_MODE | OUT,
	// rotary or linear encoder (int8)
	ENCODER = 4 << 9,
	ENCODER_IN = ENCODER | IN,
	ENCODER_OUT = ENCODER | OUT,
	// enumeration of 2-511 named values (uint16)
	ENUM = 5 << 9,
	ENUM_IN = ENUM | IN,
	ENUM_OUT = ENUM | OUT,
	ENUM_CMD_IN = ENUM_IN | CMD,
	ENUM_CMD_OUT = ENUM_OUT | CMD,
	// level category (float32, range 0-1, displayed as 0-100%)
	LEVEL = 6 << 9,
	LEVEL_IN = LEVEL | IN,
	LEVEL_OUT = LEVEL | OUT,
	LEVEL_CMD_IN = LEVEL_IN | CMD,
	LEVEL_CMD_OUT = LEVEL_OUT | CMD,
		LEVEL_CATEGORY = 127 << 6,
		// open level of gate, door, window, blind, slat or valve
		LEVEL_OPENING = LEVEL | 1 << 6,
		LEVEL_OPENING_IN = LEVEL_OPENING | IN,
		LEVEL_OPENING_OUT = LEVEL_OPENING | OUT,
		LEVEL_OPENING_CMD_IN = LEVEL_OPENING_IN | CMD,
		LEVEL_OPENING_CMD_OUT = LEVEL_OPENING_OUT | CMD,
			LEVEL_OPENING_CATEGORY = 1023 << 3,
			// gate level
			LEVEL_OPENING_GATE = LEVEL_OPENING | 1 << 3,
			LEVEL_OPENING_GATE_IN = LEVEL_OPENING_GATE | IN,
			LEVEL_OPENING_GATE_OUT = LEVEL_OPENING_GATE | OUT,
			LEVEL_OPENING_GATE_CMD_IN = LEVEL_OPENING_GATE_IN | CMD,
			LEVEL_OPENING_GATE_CMD_OUT = LEVEL_OPENING_GATE_OUT | CMD,
			// gate level
			LEVEL_OPENING_DOOR = LEVEL_OPENING | 2 << 3,
			LEVEL_OPENING_DOOR_IN = LEVEL_OPENING_DOOR | IN,
			LEVEL_OPENING_DOOR_OUT = LEVEL_OPENING_DOOR | OUT,
			LEVEL_OPENING_DOOR_CMD_IN = LEVEL_OPENING_DOOR_IN | CMD,
			LEVEL_OPENING_DOOR_CMD_OUT = LEVEL_OPENING_DOOR_OUT | CMD,
			// gate level
			LEVEL_OPENING_WINDOW = LEVEL_OPENING | 3 << 3,
			LEVEL_OPENING_WINDOW_IN = LEVEL_OPENING_WINDOW | IN,
			LEVEL_OPENING_WINDOW_OUT = LEVEL_OPENING_WINDOW | OUT,
			LEVEL_OPENING_WINDOW_CMD_IN = LEVEL_OPENING_WINDOW_IN | CMD,
			LEVEL_OPENING_WINDOW_CMD_OUT = LEVEL_OPENING_WINDOW_OUT | CMD,
			// blind level
			LEVEL_OPENING_BLIND = LEVEL_OPENING | 4 << 3,
			LEVEL_OPENING_BLIND_IN = LEVEL_OPENING_BLIND | IN,
			LEVEL_OPENING_BLIND_OUT = LEVEL_OPENING_BLIND | OUT,
			LEVEL_OPENING_BLIND_CMD_IN = LEVEL_OPENING_BLIND_IN | CMD,
			LEVEL_OPENING_BLIND_CMD_OUT = LEVEL_OPENING_BLIND_OUT | CMD,
			// slat level (e.g. slat of venetian blind)
			LEVEL_OPENING_SLAT = LEVEL_OPENING | 5 << 3,
			LEVEL_OPENING_SLAT_IN = LEVEL_OPENING_SLAT | IN,
			LEVEL_OPENING_SLAT_OUT = LEVEL_OPENING_SLAT | OUT,
			LEVEL_OPENING_SLAT_CMD_IN = LEVEL_OPENING_SLAT_IN | CMD,
			LEVEL_OPENING_SLAT_CMD_OUT = LEVEL_OPENING_SLAT_OUT | CMD,
			// valve level
			LEVEL_OPENING_VALVE = LEVEL_OPENING | 6 << 3,
			LEVEL_OPENING_VALVE_IN = LEVEL_OPENING_VALVE | IN,
			LEVEL_OPENING_VALVE_OUT = LEVEL_OPENING_VALVE | OUT,
			LEVEL_OPENING_VALVE_CMD_IN = LEVEL_OPENING_VALVE_IN | CMD,
			LEVEL_OPENING_VALVE_CMD_OUT = LEVEL_OPENING_VALVE_OUT | CMD,
		// battery level
		LEVEL_BATTERY = LEVEL | 2 << 6,
		LEVEL_BATTERY_IN = LEVEL_BATTERY | IN,
		LEVEL_BATTERY_OUT = LEVEL_BATTERY | OUT,
		// water/fuel tank level
		LEVEL_TANK = LEVEL | 3 << 6,
		LEVEL_TANK_IN = LEVEL_TANK | IN,
		LEVEL_TANK_OUT = LEVEL_TANK | OUT,
	// physical quantities category (float32)
	PHYSICAL = 7 << 9,
	PHYSICAL_IN = PHYSICAL | IN,
	PHYSICAL_OUT = PHYSICAL | OUT,
	PHYSICAL_CMD_IN = PHYSICAL_IN | CMD,
	PHYSICAL_CMD_OUT = PHYSICAL_OUT | CMD,
		PHYSICAL_CATEGORY = 255 << 5,
		// process temperature in Kelvin (displayed as Celsius or Fahrenheit)
		PHYSICAL_TEMPERATURE = PHYSICAL | 1 << 5,
		PHYSICAL_TEMPERATURE_IN = PHYSICAL_TEMPERATURE | IN,
		PHYSICAL_TEMPERATURE_OUT = PHYSICAL_TEMPERATURE | OUT,
		PHYSICAL_TEMPERATURE_CMD_IN = PHYSICAL_TEMPERATURE_IN | CMD,
		PHYSICAL_TEMPERATURE_CMD_OUT = PHYSICAL_TEMPERATURE_OUT | CMD,
			PHYSICAL_TEMPERATURE_CATEGORY = 1023 << 3,
			// measured temperature
			PHYSICAL_TEMPERATURE_MEASURED = PHYSICAL_TEMPERATURE | 1 << 3,
			PHYSICAL_TEMPERATURE_MEASURED_IN = PHYSICAL_TEMPERATURE_MEASURED | IN,
			PHYSICAL_TEMPERATURE_MEASURED_OUT = PHYSICAL_TEMPERATURE_MEASURED | OUT,
				PHYSICAL_TEMPERATURE_MEASURED_CATEGORY = 8191 << 0,
				// measured freezer temperature
				PHYSICAL_TEMPERATURE_MEASURED_FREEZER = PHYSICAL_TEMPERATURE_MEASURED | 1 << 0,
				PHYSICAL_TEMPERATURE_MEASURED_FREEZER_IN = PHYSICAL_TEMPERATURE_MEASURED_FREEZER | IN,
				PHYSICAL_TEMPERATURE_MEASURED_FREEZER_OUT = PHYSICAL_TEMPERATURE_MEASURED_FREEZER | OUT,
				// measured fridge temperature
				PHYSICAL_TEMPERATURE_MEASURED_FRIDGE = PHYSICAL_TEMPERATURE_MEASURED | 2 << 0,
				PHYSICAL_TEMPERATURE_MEASURED_FRIDGE_IN = PHYSICAL_TEMPERATURE_MEASURED_FRIDGE | IN,
				PHYSICAL_TEMPERATURE_MEASURED_FRIDGE_OUT = PHYSICAL_TEMPERATURE_MEASURED_FRIDGE | OUT,
				// measured outdoor temperature
				PHYSICAL_TEMPERATURE_MEASURED_OUTDOOR = PHYSICAL_TEMPERATURE_MEASURED | 3 << 0,
				PHYSICAL_TEMPERATURE_MEASURED_OUTDOOR_IN = PHYSICAL_TEMPERATURE_MEASURED_OUTDOOR | IN,
				PHYSICAL_TEMPERATURE_MEASURED_OUTDOOR_OUT = PHYSICAL_TEMPERATURE_MEASURED_OUTDOOR | OUT,
				// measured room temperature
				PHYSICAL_TEMPERATURE_MEASURED_ROOM = PHYSICAL_TEMPERATURE_MEASURED | 4 << 0,
				PHYSICAL_TEMPERATURE_MEASURED_ROOM_IN = PHYSICAL_TEMPERATURE_MEASURED_ROOM | IN,
				PHYSICAL_TEMPERATURE_MEASURED_ROOM_OUT = PHYSICAL_TEMPERATURE_MEASURED_ROOM | OUT,
				// measured oven temperature
				PHYSICAL_TEMPERATURE_MEASURED_OVEN = PHYSICAL_TEMPERATURE_MEASURED | 5 << 0,
				PHYSICAL_TEMPERATURE_MEASURED_OVEN_IN = PHYSICAL_TEMPERATURE_MEASURED_OVEN | IN,
				PHYSICAL_TEMPERATURE_MEASURED_OVEN_OUT = PHYSICAL_TEMPERATURE_MEASURED_OVEN | OUT,
			// setpoint temperature
			PHYSICAL_TEMPERATURE_SETPOINT = PHYSICAL_TEMPERATURE | 2 << 3,
			PHYSICAL_TEMPERATURE_SETPOINT_IN = PHYSICAL_TEMPERATURE_SETPOINT | IN,
			PHYSICAL_TEMPERATURE_SETPOINT_OUT = PHYSICAL_TEMPERATURE_SETPOINT | OUT,
			PHYSICAL_TEMPERATURE_SETPOINT_CMD_IN = PHYSICAL_TEMPERATURE_SETPOINT_IN | CMD,
			PHYSICAL_TEMPERATURE_SETPOINT_CMD_OUT = PHYSICAL_TEMPERATURE_SETPOINT_OUT | CMD,
				PHYSICAL_TEMPERATURE_SETPOINT_CATEGORY = 8191 << 0,
				// cooling setpoint for freezer (-30oC - 0oC)
				PHYSICAL_TEMPERATURE_SETPOINT_FREEZER = PHYSICAL_TEMPERATURE_SETPOINT | 1 << 0,
				PHYSICAL_TEMPERATURE_SETPOINT_FREEZER_IN = PHYSICAL_TEMPERATURE_SETPOINT_FREEZER | IN,
				PHYSICAL_TEMPERATURE_SETPOINT_FREEZER_OUT = PHYSICAL_TEMPERATURE_SETPOINT_FREEZER | OUT,
				PHYSICAL_TEMPERATURE_SETPOINT_FREEZER_CMD_IN = PHYSICAL_TEMPERATURE_SETPOINT_FREEZER_IN | CMD,
				PHYSICAL_TEMPERATURE_SETPOINT_FREEZER_CMD_OUT = PHYSICAL_TEMPERATURE_SETPOINT_FREEZER_OUT | CMD,
				// cooling setpoint for fridge (0oC - 20oC)
				PHYSICAL_TEMPERATURE_SETPOINT_FRIDGE = PHYSICAL_TEMPERATURE_SETPOINT | 2 << 0,
				PHYSICAL_TEMPERATURE_SETPOINT_FRIDGE_IN = PHYSICAL_TEMPERATURE_SETPOINT_FRIDGE | IN,
				PHYSICAL_TEMPERATURE_SETPOINT_FRIDGE_OUT = PHYSICAL_TEMPERATURE_SETPOINT_FRIDGE | OUT,
				PHYSICAL_TEMPERATURE_SETPOINT_FRIDGE_CMD_IN = PHYSICAL_TEMPERATURE_SETPOINT_FRIDGE_IN | CMD,
				PHYSICAL_TEMPERATURE_SETPOINT_FRIDGE_CMD_OUT = PHYSICAL_TEMPERATURE_SETPOINT_FRIDGE_OUT | CMD,
				// cooling setpoint for hvac (8oC - 30oC)
				PHYSICAL_TEMPERATURE_SETPOINT_COOLER = PHYSICAL_TEMPERATURE_SETPOINT | 3 << 0,
				PHYSICAL_TEMPERATURE_SETPOINT_COOLER_IN = PHYSICAL_TEMPERATURE_SETPOINT_COOLER | IN,
				PHYSICAL_TEMPERATURE_SETPOINT_COOLER_OUT = PHYSICAL_TEMPERATURE_SETPOINT_COOLER | OUT,
				PHYSICAL_TEMPERATURE_SETPOINT_COOLER_CMD_IN = PHYSICAL_TEMPERATURE_SETPOINT_COOLER_IN | CMD,
				PHYSICAL_TEMPERATURE_SETPOINT_COOLER_CMD_OUT = PHYSICAL_TEMPERATURE_SETPOINT_COOLER_OUT | CMD,
				// heating setpoint for hvac (8oC - 30oC)
				PHYSICAL_TEMPERATURE_SETPOINT_HEATER = PHYSICAL_TEMPERATURE_SETPOINT | 4 << 0,
				PHYSICAL_TEMPERATURE_SETPOINT_HEATER_IN = PHYSICAL_TEMPERATURE_SETPOINT_HEATER | IN,
				PHYSICAL_TEMPERATURE_SETPOINT_HEATER_OUT = PHYSICAL_TEMPERATURE_SETPOINT_HEATER | OUT,
				PHYSICAL_TEMPERATURE_SETPOINT_HEATER_CMD_IN = PHYSICAL_TEMPERATURE_SETPOINT_HEATER_IN | CMD,
				PHYSICAL_TEMPERATURE_SETPOINT_HEATER_CMD_OUT = PHYSICAL_TEMPERATURE_SETPOINT_HEATER_OUT | CMD,
				// heating setpoint for oven (100oC - 400oC)
				PHYSICAL_TEMPERATURE_SETPOINT_OVEN = PHYSICAL_TEMPERATURE_SETPOINT | 5 << 0,
				PHYSICAL_TEMPERATURE_SETPOINT_OVEN_IN = PHYSICAL_TEMPERATURE_SETPOINT_OVEN | IN,
				PHYSICAL_TEMPERATURE_SETPOINT_OVEN_OUT = PHYSICAL_TEMPERATURE_SETPOINT_OVEN | OUT,
				PHYSICAL_TEMPERATURE_SETPOINT_OVEN_CMD_IN = PHYSICAL_TEMPERATURE_SETPOINT_OVEN_IN | CMD,
				PHYSICAL_TEMPERATURE_SETPOINT_OVEN_CMD_OUT = PHYSICAL_TEMPERATURE_SETPOINT_OVEN_OUT | CMD,
		// pressure in Pascal (displayed as hPa or kPa)
		PHYSICAL_PRESSURE = PHYSICAL | 2 << 5,
		PHYSICAL_PRESSURE_IN = PHYSICAL_PRESSURE | IN,
		PHYSICAL_PRESSURE_OUT = PHYSICAL_PRESSURE | OUT,
		PHYSICAL_PRESSURE_CMD_IN = PHYSICAL_PRESSURE_IN | CMD,
		PHYSICAL_PRESSURE_CMD_OUT = PHYSICAL_PRESSURE_OUT | CMD,
			PHYSICAL_PRESSURE_CATEGORY = 1023 << 3,
			// measured pressure
			PHYSICAL_PRESSURE_MEASURED = PHYSICAL_PRESSURE | 1 << 3,
			PHYSICAL_PRESSURE_MEASURED_IN = PHYSICAL_PRESSURE_MEASURED | IN,
			PHYSICAL_PRESSURE_MEASURED_OUT = PHYSICAL_PRESSURE_MEASURED | OUT,
				PHYSICAL_PRESSURE_MEASURED_CATEGORY = 4095 << 1,
				// measured atmospheric pressure
				PHYSICAL_PRESSURE_MEASURED_ATMOSPHERE = PHYSICAL_PRESSURE_MEASURED | 1 << 1,
				PHYSICAL_PRESSURE_MEASURED_ATMOSPHERE_IN = PHYSICAL_PRESSURE_MEASURED_ATMOSPHERE | IN,
				PHYSICAL_PRESSURE_MEASURED_ATMOSPHERE_OUT = PHYSICAL_PRESSURE_MEASURED_ATMOSPHERE | OUT,
			// pressure setpoint
			PHYSICAL_PRESSURE_SETPOINT = PHYSICAL_PRESSURE | 2 << 3,
			PHYSICAL_PRESSURE_SETPOINT_IN = PHYSICAL_PRESSURE_SETPOINT | IN,
			PHYSICAL_PRESSURE_SETPOINT_OUT = PHYSICAL_PRESSURE_SETPOINT | OUT,
			PHYSICAL_PRESSURE_SETPOINT_CMD_IN = PHYSICAL_PRESSURE_SETPOINT_IN | CMD,
			PHYSICAL_PRESSURE_SETPOINT_CMD_OUT = PHYSICAL_PRESSURE_SETPOINT_OUT | CMD,
		// electrical voltage
		PHYSICAL_VOLTAGE = PHYSICAL | 3 << 5,
		PHYSICAL_VOLTAGE_IN = PHYSICAL_VOLTAGE | IN,
		PHYSICAL_VOLTAGE_OUT = PHYSICAL_VOLTAGE | OUT,
		PHYSICAL_VOLTAGE_CMD_IN = PHYSICAL_VOLTAGE_IN | CMD,
		PHYSICAL_VOLTAGE_CMD_OUT = PHYSICAL_VOLTAGE_OUT | CMD,
			PHYSICAL_VOLTAGE_CATEGORY = 1023 << 3,
			// measured voltage
			PHYSICAL_VOLTAGE_MEASURED = PHYSICAL_VOLTAGE | 1 << 3,
			PHYSICAL_VOLTAGE_MEASURED_IN = PHYSICAL_VOLTAGE_MEASURED | IN,
			PHYSICAL_VOLTAGE_MEASURED_OUT = PHYSICAL_VOLTAGE_MEASURED | OUT,
				PHYSICAL_VOLTAGE_MEASURED_CATEGORY = 8191 << 0,
				// low voltage up to 50V
				PHYSICAL_VOLTAGE_MEASURED_LOW = PHYSICAL_VOLTAGE_MEASURED | 1 << 0,
				PHYSICAL_VOLTAGE_MEASURED_LOW_IN = PHYSICAL_VOLTAGE_MEASURED_LOW | IN,
				PHYSICAL_VOLTAGE_MEASURED_LOW_OUT = PHYSICAL_VOLTAGE_MEASURED_LOW | OUT,
				// mains voltage 110V, 230V, 400V
				PHYSICAL_VOLTAGE_MEASURED_MAINS = PHYSICAL_VOLTAGE_MEASURED | 2 << 0,
				PHYSICAL_VOLTAGE_MEASURED_MAINS_IN = PHYSICAL_VOLTAGE_MEASURED_MAINS | IN,
				PHYSICAL_VOLTAGE_MEASURED_MAINS_OUT = PHYSICAL_VOLTAGE_MEASURED_MAINS | OUT,
				// high voltage
				PHYSICAL_VOLTAGE_MEASURED_HIGH = PHYSICAL_VOLTAGE_MEASURED | 3 << 0,
				PHYSICAL_VOLTAGE_MEASURED_HIGH_IN = PHYSICAL_VOLTAGE_MEASURED_HIGH | IN,
				PHYSICAL_VOLTAGE_MEASURED_HIGH_OUT = PHYSICAL_VOLTAGE_MEASURED_HIGH | OUT,
			// voltage setpoint
			PHYSICAL_VOLTAGE_SETPOINT = PHYSICAL_VOLTAGE | 2 << 3,
			PHYSICAL_VOLTAGE_SETPOINT_IN = PHYSICAL_VOLTAGE_SETPOINT | IN,
			PHYSICAL_VOLTAGE_SETPOINT_OUT = PHYSICAL_VOLTAGE_SETPOINT | OUT,
			PHYSICAL_VOLTAGE_SETPOINT_CMD_IN = PHYSICAL_VOLTAGE_SETPOINT_IN | CMD,
			PHYSICAL_VOLTAGE_SETPOINT_CMD_OUT = PHYSICAL_VOLTAGE_SETPOINT_OUT | CMD,
		// electrical current
		PHYSICAL_CURRENT = PHYSICAL | 4 << 5,
		PHYSICAL_CURRENT_IN = PHYSICAL_CURRENT | IN,
		PHYSICAL_CURRENT_OUT = PHYSICAL_CURRENT | OUT,
		PHYSICAL_CURRENT_CMD_IN = PHYSICAL_CURRENT_IN | CMD,
		PHYSICAL_CURRENT_CMD_OUT = PHYSICAL_CURRENT_OUT | CMD,
			PHYSICAL_CURRENT_CATEGORY = 1023 << 3,
			// measured current
			PHYSICAL_CURRENT_MEASURED = PHYSICAL_CURRENT | 1 << 3,
			PHYSICAL_CURRENT_MEASURED_IN = PHYSICAL_CURRENT_MEASURED | IN,
			PHYSICAL_CURRENT_MEASURED_OUT = PHYSICAL_CURRENT_MEASURED | OUT,
			// current setpoint
			PHYSICAL_CURRENT_SETPOINT = PHYSICAL_CURRENT | 2 << 3,
			PHYSICAL_CURRENT_SETPOINT_IN = PHYSICAL_CURRENT_SETPOINT | IN,
			PHYSICAL_CURRENT_SETPOINT_OUT = PHYSICAL_CURRENT_SETPOINT | OUT,
			PHYSICAL_CURRENT_SETPOINT_CMD_IN = PHYSICAL_CURRENT_SETPOINT_IN | CMD,
			PHYSICAL_CURRENT_SETPOINT_CMD_OUT = PHYSICAL_CURRENT_SETPOINT_OUT | CMD,
		// power
		PHYSICAL_POWER = PHYSICAL | 5 << 5,
		PHYSICAL_POWER_IN = PHYSICAL_POWER | IN,
		PHYSICAL_POWER_OUT = PHYSICAL_POWER | OUT,
		PHYSICAL_POWER_CMD_IN = PHYSICAL_POWER_IN | CMD,
		PHYSICAL_POWER_CMD_OUT = PHYSICAL_POWER_OUT | CMD,
			PHYSICAL_POWER_CATEGORY = 1023 << 3,
			// measured power
			PHYSICAL_POWER_MEASURED = PHYSICAL_POWER | 1 << 3,
			PHYSICAL_POWER_MEASURED_IN = PHYSICAL_POWER_MEASURED | IN,
			PHYSICAL_POWER_MEASURED_OUT = PHYSICAL_POWER_MEASURED | OUT,
			// power setpoint
			PHYSICAL_POWER_SETPOINT = PHYSICAL_POWER | 2 << 3,
			PHYSICAL_POWER_SETPOINT_IN = PHYSICAL_POWER_SETPOINT | IN,
			PHYSICAL_POWER_SETPOINT_OUT = PHYSICAL_POWER_SETPOINT | OUT,
			PHYSICAL_POWER_SETPOINT_CMD_IN = PHYSICAL_POWER_SETPOINT_IN | CMD,
			PHYSICAL_POWER_SETPOINT_CMD_OUT = PHYSICAL_POWER_SETPOINT_OUT | CMD,
		// illuminance
		PHYSICAL_ILLUMINANCE = PHYSICAL | 6 << 5,
		PHYSICAL_ILLUMINANCE_IN = PHYSICAL_ILLUMINANCE | IN,
		PHYSICAL_ILLUMINANCE_OUT = PHYSICAL_ILLUMINANCE | OUT,
	// concentration of substance category (float32)
	CONCENTRATION = 8 << 9,
	CONCENTRATION_IN = CONCENTRATION | IN,
	CONCENTRATION_OUT = CONCENTRATION | OUT,
	CONCENTRATION_CMD_IN = CONCENTRATION_IN | CMD,
	CONCENTRATION_CMD_OUT = CONCENTRATION_OUT | CMD,
		CONCENTRATION_CATEGORY = 511 << 4,
		// relative humidity in percent
		CONCENTRATION_RELATIVE_HUMIDITY = CONCENTRATION | 1 << 4,
		CONCENTRATION_RELATIVE_HUMIDITY_IN = CONCENTRATION_RELATIVE_HUMIDITY | IN,
		CONCENTRATION_RELATIVE_HUMIDITY_OUT = CONCENTRATION_RELATIVE_HUMIDITY | OUT,
		CONCENTRATION_RELATIVE_HUMIDITY_CMD_IN = CONCENTRATION_RELATIVE_HUMIDITY_IN | CMD,
		CONCENTRATION_RELATIVE_HUMIDITY_CMD_OUT = CONCENTRATION_RELATIVE_HUMIDITY_OUT | CMD,
			CONCENTRATION_RELATIVE_HUMIDITY_CATEGORY = 2047 << 2,
			// measured relative humidity
			CONCENTRATION_RELATIVE_HUMIDITY_MEASURED = CONCENTRATION_RELATIVE_HUMIDITY | 1 << 2,
			CONCENTRATION_RELATIVE_HUMIDITY_MEASURED_IN = CONCENTRATION_RELATIVE_HUMIDITY_MEASURED | IN,
			CONCENTRATION_RELATIVE_HUMIDITY_MEASURED_OUT = CONCENTRATION_RELATIVE_HUMIDITY_MEASURED | OUT,
				CONCENTRATION_RELATIVE_HUMIDITY_MEASURED_CATEGORY = 8191 << 0,
				// measured relative air humidity
				CONCENTRATION_RELATIVE_HUMIDITY_MEASURED_AIR = CONCENTRATION_RELATIVE_HUMIDITY_MEASURED | 1 << 0,
				CONCENTRATION_RELATIVE_HUMIDITY_MEASURED_AIR_IN = CONCENTRATION_RELATIVE_HUMIDITY_MEASURED_AIR | IN,
				CONCENTRATION_RELATIVE_HUMIDITY_MEASURED_AIR_OUT = CONCENTRATION_RELATIVE_HUMIDITY_MEASURED_AIR | OUT,
			// setpoint relative humidity
			CONCENTRATION_RELATIVE_HUMIDITY_SETPOINT = CONCENTRATION_RELATIVE_HUMIDITY | 2 << 2,
			CONCENTRATION_RELATIVE_HUMIDITY_SETPOINT_IN = CONCENTRATION_RELATIVE_HUMIDITY_SETPOINT | IN,
			CONCENTRATION_RELATIVE_HUMIDITY_SETPOINT_OUT = CONCENTRATION_RELATIVE_HUMIDITY_SETPOINT | OUT,
			CONCENTRATION_RELATIVE_HUMIDITY_SETPOINT_CMD_IN = CONCENTRATION_RELATIVE_HUMIDITY_SETPOINT_IN | CMD,
			CONCENTRATION_RELATIVE_HUMIDITY_SETPOINT_CMD_OUT = CONCENTRATION_RELATIVE_HUMIDITY_SETPOINT_OUT | CMD,
		// volatile organic components
		CONCENTRATION_VOC = CONCENTRATION | 2 << 4,
		CONCENTRATION_VOC_IN = CONCENTRATION_VOC | IN,
		CONCENTRATION_VOC_OUT = CONCENTRATION_VOC | OUT,
		// carbon monoxide
		CONCENTRATION_CARBON_MONOXIDE = CONCENTRATION | 3 << 4,
		CONCENTRATION_CARBON_MONOXIDE_IN = CONCENTRATION_CARBON_MONOXIDE | IN,
		CONCENTRATION_CARBON_MONOXIDE_OUT = CONCENTRATION_CARBON_MONOXIDE | OUT,
		// carbon dioxide
		CONCENTRATION_CARBON_DIOXIDE = CONCENTRATION | 4 << 4,
		CONCENTRATION_CARBON_DIOXIDE_IN = CONCENTRATION_CARBON_DIOXIDE | IN,
		CONCENTRATION_CARBON_DIOXIDE_OUT = CONCENTRATION_CARBON_DIOXIDE | OUT,
	// lighting category (float32, commands include a transition time)
	LIGHTING = 9 << 9,
	LIGHTING_IN = LIGHTING | IN,
	LIGHTING_OUT = LIGHTING | OUT,
	LIGHTING_CMD_IN = LIGHTING_IN | CMD,
	LIGHTING_CMD_OUT = LIGHTING_OUT | CMD,
		LIGHTING_CATEGORY = 255 << 5,
		// light brightness
		LIGHTING_BRIGHTNESS = LIGHTING | 1 << 5,
		LIGHTING_BRIGHTNESS_IN = LIGHTING_BRIGHTNESS | IN,
		LIGHTING_BRIGHTNESS_OUT = LIGHTING_BRIGHTNESS | OUT,
		LIGHTING_BRIGHTNESS_CMD_IN = LIGHTING_BRIGHTNESS_IN | CMD,
		LIGHTING_BRIGHTNESS_CMD_OUT = LIGHTING_BRIGHTNESS_OUT | CMD,
		// color temperature in Kelvin
		LIGHTING_COLOR_TEMPERATURE = LIGHTING | 2 << 5,
		LIGHTING_COLOR_TEMPERATURE_IN = LIGHTING_COLOR_TEMPERATURE | IN,
		LIGHTING_COLOR_TEMPERATURE_OUT = LIGHTING_COLOR_TEMPERATURE | OUT,
		LIGHTING_COLOR_TEMPERATURE_CMD_IN = LIGHTING_COLOR_TEMPERATURE_IN | CMD,
		LIGHTING_COLOR_TEMPERATURE_CMD_OUT = LIGHTING_COLOR_TEMPERATURE_OUT | CMD,
		// color parameter, commands include a transition time
		LIGHTING_COLOR_PARAMETER = LIGHTING | 3 << 5,
		LIGHTING_COLOR_PARAMETER_IN = LIGHTING_COLOR_PARAMETER | IN,
		LIGHTING_COLOR_PARAMETER_OUT = LIGHTING_COLOR_PARAMETER | OUT,
		LIGHTING_COLOR_PARAMETER_CMD_IN = LIGHTING_COLOR_PARAMETER_IN | CMD,
		LIGHTING_COLOR_PARAMETER_CMD_OUT = LIGHTING_COLOR_PARAMETER_OUT | CMD,
			LIGHTING_COLOR_PARAMETER_CATEGORY = 2047 << 2,
			// color chromaticity x (CIE xyY model)
			LIGHTING_COLOR_PARAMETER_CHROMATICITY_X = LIGHTING_COLOR_PARAMETER | 1 << 2,
			LIGHTING_COLOR_PARAMETER_CHROMATICITY_X_IN = LIGHTING_COLOR_PARAMETER_CHROMATICITY_X | IN,
			LIGHTING_COLOR_PARAMETER_CHROMATICITY_X_OUT = LIGHTING_COLOR_PARAMETER_CHROMATICITY_X | OUT,
			LIGHTING_COLOR_PARAMETER_CHROMATICITY_X_CMD_IN = LIGHTING_COLOR_PARAMETER_CHROMATICITY_X_IN | CMD,
			LIGHTING_COLOR_PARAMETER_CHROMATICITY_X_CMD_OUT = LIGHTING_COLOR_PARAMETER_CHROMATICITY_X_OUT | CMD,
			// color chromaticity y (CIE xyY model)
			LIGHTING_COLOR_PARAMETER_CHROMATICITY_Y = LIGHTING_COLOR_PARAMETER | 2 << 2,
			LIGHTING_COLOR_PARAMETER_CHROMATICITY_Y_IN = LIGHTING_COLOR_PARAMETER_CHROMATICITY_Y | IN,
			LIGHTING_COLOR_PARAMETER_CHROMATICITY_Y_OUT = LIGHTING_COLOR_PARAMETER_CHROMATICITY_Y | OUT,
			LIGHTING_COLOR_PARAMETER_CHROMATICITY_Y_CMD_IN = LIGHTING_COLOR_PARAMETER_CHROMATICITY_Y_IN | CMD,
			LIGHTING_COLOR_PARAMETER_CHROMATICITY_Y_CMD_OUT = LIGHTING_COLOR_PARAMETER_CHROMATICITY_Y_OUT | CMD,
			// color hue
			LIGHTING_COLOR_PARAMETER_HUE = LIGHTING_COLOR_PARAMETER | 3 << 2,
			LIGHTING_COLOR_PARAMETER_HUE_IN = LIGHTING_COLOR_PARAMETER_HUE | IN,
			LIGHTING_COLOR_PARAMETER_HUE_OUT = LIGHTING_COLOR_PARAMETER_HUE | OUT,
			LIGHTING_COLOR_PARAMETER_HUE_CMD_IN = LIGHTING_COLOR_PARAMETER_HUE_IN | CMD,
			LIGHTING_COLOR_PARAMETER_HUE_CMD_OUT = LIGHTING_COLOR_PARAMETER_HUE_OUT | CMD,
			// color saturation
			LIGHTING_COLOR_PARAMETER_SATURATION = LIGHTING_COLOR_PARAMETER | 4 << 2,
			LIGHTING_COLOR_PARAMETER_SATURATION_IN = LIGHTING_COLOR_PARAMETER_SATURATION | IN,
			LIGHTING_COLOR_PARAMETER_SATURATION_OUT = LIGHTING_COLOR_PARAMETER_SATURATION | OUT,
			LIGHTING_COLOR_PARAMETER_SATURATION_CMD_IN = LIGHTING_COLOR_PARAMETER_SATURATION_IN | CMD,
			LIGHTING_COLOR_PARAMETER_SATURATION_CMD_OUT = LIGHTING_COLOR_PARAMETER_SATURATION_OUT | CMD,
	// metering of elecricity, water, gas etc. category (uint32)
	METERING = 10 << 9,
	METERING_IN = METERING | IN,
	METERING_OUT = METERING | OUT,
		METERING_CATEGORY = 255 << 5,
		// electric meter
		METERING_ELECTRIC = METERING | 1 << 5,
		METERING_ELECTRIC_IN = METERING_ELECTRIC | IN,
		METERING_ELECTRIC_OUT = METERING_ELECTRIC | OUT,
			METERING_ELECTRIC_CATEGORY = 1023 << 3,
			// usage (OBIS 1.8.0)
			METERING_ELECTRIC_USAGE = METERING_ELECTRIC | 1 << 3,
			METERING_ELECTRIC_USAGE_IN = METERING_ELECTRIC_USAGE | IN,
			METERING_ELECTRIC_USAGE_OUT = METERING_ELECTRIC_USAGE | OUT,
				METERING_ELECTRIC_USAGE_CATEGORY = 4095 << 1,
				// usage during peak hours (OBIS 1.8.1)
				METERING_ELECTRIC_USAGE_PEAK = METERING_ELECTRIC_USAGE | 1 << 1,
				METERING_ELECTRIC_USAGE_PEAK_IN = METERING_ELECTRIC_USAGE_PEAK | IN,
				METERING_ELECTRIC_USAGE_PEAK_OUT = METERING_ELECTRIC_USAGE_PEAK | OUT,
				// usage during off peak hours (OBIS 1.8.2)
				METERING_ELECTRIC_USAGE_OFF_PEAK = METERING_ELECTRIC_USAGE | 2 << 1,
				METERING_ELECTRIC_USAGE_OFF_PEAK_IN = METERING_ELECTRIC_USAGE_OFF_PEAK | IN,
				METERING_ELECTRIC_USAGE_OFF_PEAK_OUT = METERING_ELECTRIC_USAGE_OFF_PEAK | OUT,
			// supply (OBIS 2.8.0)
			METERING_ELECTRIC_SUPPLY = METERING_ELECTRIC | 2 << 3,
			METERING_ELECTRIC_SUPPLY_IN = METERING_ELECTRIC_SUPPLY | IN,
			METERING_ELECTRIC_SUPPLY_OUT = METERING_ELECTRIC_SUPPLY | OUT,
				METERING_ELECTRIC_SUPPLY_CATEGORY = 4095 << 1,
				// supply during peak hours (OBIS 2.8.1)
				METERING_ELECTRIC_SUPPLY_PEAK = METERING_ELECTRIC_SUPPLY | 1 << 1,
				METERING_ELECTRIC_SUPPLY_PEAK_IN = METERING_ELECTRIC_SUPPLY_PEAK | IN,
				METERING_ELECTRIC_SUPPLY_PEAK_OUT = METERING_ELECTRIC_SUPPLY_PEAK | OUT,
				// supply during off-peak hours (OBIS 2.8.2)
				METERING_ELECTRIC_SUPPLY_OFF_PEAK = METERING_ELECTRIC_SUPPLY | 2 << 1,
				METERING_ELECTRIC_SUPPLY_OFF_PEAK_IN = METERING_ELECTRIC_SUPPLY_OFF_PEAK | IN,
				METERING_ELECTRIC_SUPPLY_OFF_PEAK_OUT = METERING_ELECTRIC_SUPPLY_OFF_PEAK | OUT,
		// water meter
		METERING_WATER = METERING | 2 << 5,
		METERING_WATER_IN = METERING_WATER | IN,
		METERING_WATER_OUT = METERING_WATER | OUT,
		// gas meter
		METERING_GAS = METERING | 3 << 5,
		METERING_GAS_IN = METERING_GAS | IN,
		METERING_GAS_OUT = METERING_GAS | OUT,
};
FLAGS_ENUM(PlugType)

